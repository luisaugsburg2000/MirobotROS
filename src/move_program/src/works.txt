// #include <memory>
// #include <rclcpp/rclcpp.hpp>
// #include <moveit/move_group_interface/move_group_interface.h>
// #include <tf2_geometry_msgs/tf2_geometry_msgs.hpp>
// #include <tf2/LinearMath/Quaternion.h>

// int main(int argc, char * argv[])
// {
//   rclcpp::init(argc, argv);
//   auto const node = std::make_shared<rclcpp::Node>
//   (
//     "move_program",
//     rclcpp::NodeOptions().automatically_declare_parameters_from_overrides(true)
//   );

//   auto const logger = rclcpp::get_logger("move_program");

//   moveit::planning_interface::MoveGroupInterface move_group_interface(node, "arm"); // --> change "panda_arm" too "arm" 

//   // tf2::Quaternion tf2_quat;
//   // tf2_quat.setRPY(0, 0, -3.141/2); // roll pitch yaw
//   // geometry_msgs::msg::Quaternion msg_quat = tf2::toMsg(tf2_quat);

//   // geometry_msgs::msg::Pose GoalPose;
//   // GoalPose.orientation = msg_quat;
//   // GoalPose.position.x = 0.2;
//   // GoalPose.position.y = 0;
//   // GoalPose.position.z = 0.2;
//   // move_group_interface.setPoseTarget(GoalPose);
//   // move_group_interface.setPlanningTime(3.0);
//   // RCLCPP_INFO(logger, "target pose set");

//   const std::string named_goal = "arm_stretched";
//   move_group_interface.setNamedTarget(named_goal);

//   // Create a plan
//   moveit::planning_interface::MoveGroupInterface::Plan plan1;
//   auto const outcome = static_cast<bool>(move_group_interface.plan(plan1));

//   if(outcome){
//     move_group_interface.execute(plan1);
//   }
//   else{
//     RCLCPP_ERROR(logger, "Not able to plan and execute");
//   }

//   rclcpp::spin(node);
//   rclcpp::shutdown();
//   return 0;
// }